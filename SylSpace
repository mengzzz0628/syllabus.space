#!/usr/bin/env perl
use lib 'lib';
use Mojolicious::Lite; ## strict, warnings, utf8 and Perl 5.10

plugin 'Mojolyst' => {controllers => 'SylSpace::Controller'};
plugin 'RenderFile';
plugin 'browser_detect';

use FindBin;
## the full executable is in $ENV{MOJO_EXE} or in $ENV{'sitepath'}/$0;

use Data::Dumper;

$ENV{'sitename'}= "syllabus.space";  ## could be deduced from $ENV{HOSTNAME} =~ s/-/\./;
$ENV{'sitepath'}= $FindBin::Bin;

$ENV{'siteacolor'}='AntiqueWhite'; $ENV{'jumboacolor'}='darkgreen';
$ENV{'siteicolor'}=$ENV{'sitescolor'}='white';
$ENV{'jumboscolor'}='darkblue';
$ENV{'jumboicolor'}='darkred';


################################################################################################################################
## unfortunately, you have to be connected to the correct diretory; I think Mojolyst does not work otherwise
################################################################################################################################

{
  (my $pgmname= $0) =~ s{.*/}{};  ## usually SylSpace
  my $configfile="$ENV{'sitepath'}/$pgmname.conf";

  (-e $configfile) or die "\nFATAL: no authentication secrets config file '$configfile'\n";
  (-l $configfile) or die "\nFATAL: authentication secrets config file '$configfile' is in the github'ed  directory, not a link!\n";
  print "[Authentication secrets are symlink to ".readlink("$ENV{'sitepath'}/$pgmname.conf")."]\n";

  plugin 'Config';

  my $credentials = app->plugin('Config')->{oauth};
  (defined($credentials)) or die "internal error: I cannot read the oauth information from the config file\n";

  if (my $google = $credentials->{google}) {
    my ($key, $secret) = @$google;

    plugin 'Web::Auth' => (
			   module      => 'Google',
			   key         => $key,
			   secret      => $secret,
			   scope       => 'email',
			   on_finished => \&SylSpace::Controller::AuthAuthenticator::google,
			  );
  }

  if (my $github = $credentials->{github}) {
    my ($key, $secret) = @$github;

    plugin 'Web::Auth' => (
			   module      => 'Github',
			   key         => $key,
			   secret      => $secret,
			   on_finished => \&SylSpace::Controller::AuthAuthenticator::github,
			  );
  }

  if (my $facebook = $credentials->{facebook}) {
    my ($key, $secret) = @$facebook;

    plugin 'Web::Auth' => (
			   module      => 'Facebook',
			   key         => $key,
			   secret      => $secret,
			   scope       => 'email',
			   on_finished => \&SylSpace::Controller::AuthAuthenticator::facebook
			  );
  }
}

################################################################################################################################
## http://user.course.$ENV{'sitename'} -> $ENV{'sitename'}
## http://$ENV{'sitename'} -> $ENV{'sitename'}
*Mojo::URL::domain = sub {
  my $self= shift;
  my $fulldomain= $self->to_abs->host;
  (defined($fulldomain)) or die "internal error trying to decode domain, ".Dumper $self->to_abs;

  ($fulldomain =~ /localhost/) and return "localhost:3000";
  $fulldomain =~ s{^http.*[^/]*/}{};

  my @f= split(/\./, $fulldomain);
  (@f) or return;  ## should never happen, so this is an error return
  return $f[$#f-1].'.'.$f[$#f];  ## the last two: TLD and Domain
};


## http://user.course.$ENV{'sitename'} -> user.course
## http://$ENV{'sitename'} -> undef
*Mojo::URL::subdomain = sub {
  my $self= shift;
  my $fulldomain= $self->to_abs->host;
  $fulldomain =~ s{^http.*[^/]*/}{};

  my @f= split(/\./, $fulldomain);
  (@f) or return '';  ## never
  (pop(@f) ne "localhost") and pop(@f);  ## hehe --- pop again
  ($#f>=0) or return '';
  return join('.', @f);
};


################################################################################################################################
use Perl6::Slurp;
my @pwsecret=slurp('/var/sylspace/secrets.txt');
app->secrets( \@pwsecret );  ## the first one encodes, the others are usable; maybe rotate by day

if (defined($ENV{'HYPNOTOAD_EXE'})) {
  $ENV{'ONLOCALHOST'}=0;
  app->config(hypnotoad => {listen => ['http://'.$ENV{'sitename'}.':80']});
} elsif (($ENV{TEST2_ACTIVE})&&(!defined($ENV{'MOJO_REUSE'}))) {
  ## not really working.  just a start.
  ($ENV{'ONLOCALHOST'} = ($ENV{'MOJO_REUSE'}) =~ /^[0-9]+\.0\.0\./)?1:0;
} else {
  (defined($ENV{'MOJO_REUSE'})) or die "No ENV{MOJO_REUSE}: I do not know which Mserver is being used\n";
  ($ENV{'ONLOCALHOST'} = ($ENV{'MOJO_REUSE'}) =~ /^[0-9]+\.0\.0\./)?1:0;
}

if ($ENV{'ONLOCALHOST'}) {
  warn "localhost mode only --- logging out does not work correctly\n";
} else {
  our $domain='.'.$ENV{'sitename'};
  app->sessions->cookie_domain($domain);
}

print "$0: Starting App now\n";

app->start();
